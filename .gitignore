# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
prompt/

# Resource files - track important assets but ignore temp files
!resource/
!resource/img/
resource/*.tmp
resource/temp_*
resource/img/*.tmp
resource/img/temp_*
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Portable builds and executables
SocialDownloader_Portable/
SocialDownloader_Lightweight/
SocialDownloader_Console/
SocialDownloader_Directory/
SocialDownloader
SocialDownloader_Light
SocialDownloader_Console
SocialDownloader_Dir/
*.app
*.exe
*.dmg
*.pkg
*.deb
*.rpm

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
venv.zip

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include platform and tool-specific gitignore files
#  under VCS, and distribute them as part of initial project setup.
.idea/

# VS Code
.vscode/

# Project-specific ignores
# =====================

# Downloaded content - these files can be large and are output
output/
src/output/
downloads/

# Whisper model cache
*.pt

# Audio/Video files
*.mp4
*.mp3
*.wav
*.avi
*.mov
*.mkv
*.webm
*.m4a
*.aac
*.flac
*.ogg

# Subtitle files
*.srt
*.vtt
*.ass
*.ssa

# Transcript files (optional - remove if you want to track them)
*.txt
!requirements.txt
!README.txt
!*.md

# Cookie files (security sensitive)
cookies.txt
*.cookies

# Temporary files
temp/
tmp/
temp_*
*.tmp

# Logs
logs/
*.log

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Backup files
*.bak
*.backup
*.swp
*.swo

# IDE files
*.sublime-project
*.sublime-workspace

# Configuration files with sensitive data
config.json
settings.json
.env.local
.env.production

# Test files
test_*
*_test.py
tests/

# Build scripts and temporary files
build_portable.py
build_options.py
debug_*
demo_*
create_*

# Documentation build
docs/build/

# FFmpeg binaries (if bundled)
ffmpeg
ffmpeg.exe
ffprobe
ffprobe.exe

# Sample and test media files
*.mp3
*.mp4
*.wav
*.avi
*.mov
*.mkv
*.webm
*.m4a
*.aac
*.flac
*.ogg
test_sample.*

# URL test files
test_urls.txt
urls.txt
batch_urls.txt

# Old/backup GUI files
*_old.py
*_backup.py
*_temp.py

# Development and debugging files
*.pyc
*.pyo
*.pyd
__pycache__/
*.so
*.dylib
*.dll

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~